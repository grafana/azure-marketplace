{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
        },
        "sshUsername": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPublicKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "ssh key for the Virtual Machine."
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "grafana",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "protocol": {
            "type": "string",
            "defaultValue": "http",
            "allowedValues": [
                "http",
                "https"
            ]
        },
        "certFile": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A Base-64 encoded form of the certificate (.crt) to secure HTTPS communications between the browser and Grafana."
            }
        },
        "keyFile": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "A Base-64 encoded form of the private key (.key) to secure HTTPS communications between the browser and Grafana."
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the grafana instance"
            }
        },
        "domainNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for domain name to access Grafana which is in the format: {prefix}.{location}.cloudapp.azure.com"
            }
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2",
            "metadata": {
                "description": "size of the vm to use for the grafana instance"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            }
        },
        "virtualNetworkNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identifies whether to use new or existing Virtual Network"
            }
        },
        "virtualNetworkExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of resource group of existing Virtual Network (if applicable)"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual network address"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "shsubnet",
            "metadata": {
                "description": "Subnet for grafana"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Grafana subnet CIDR"
            }
        },
        "subnetStartAddress": {
            "type": "string",
            "defaultValue": "10.0.0.20",
            "metadata": {
                "description": "Grafana subnet start address"
            }
        }
    },
    "variables": {
        "baseUrl": "https://raw.githubusercontent.com/jtlisi/azure-marketplace/master/",
        "installScripts": [
            "[concat(variables('baseUrl'), 'scripts/install-grafana.sh')]"
        ],
        "nicName": "[concat(parameters('namespace'), '-nic')]",
        "publicIPAddressName": "[parameters('publicIpAddressName')]",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "virtualNetworkTemplateUrl": "[concat(variables('baseUrl'), 'nested/', 'vnet-', parameters('virtualNetworkNewOrExisting'), '.json')]",
        "networkSettings": {
            "virtualNetworkName": "[parameters('virtualNetworkName')]",
            "virtualNetworkExistingRGName": "[parameters('virtualNetworkExistingRGName')]",
            "virtualNetworkAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
            "subnet": {
                    "name": "[parameters('subnetName')]",
                    "prefix": "[parameters('subnetPrefix')]",
                    "vnet": "[parameters('virtualNetworkName')]"
            }
        },
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "passwordAuth": {
            "computerName": "[concat(parameters('namespace'), '-vm')]",
            "adminUsername": "[parameters('sshUsername')]",
            "adminPassword": "[parameters('sshPassword')]"
        },
        "sshAuth": {
            "computerName":  "[concat(parameters('namespace'), '-vm')]",
            "adminUsername": "[parameters('sshUsername')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [{
                        "path": "[concat('/home/', parameters('sshUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('sshPublicKey')]"
                    }]
                }
            }
        },
        "OSDiskName": "grafana_disk",
        "securityGroupName": "[concat(parameters('namespace'), '-nsg')]"
    },
    "resources": [{
            "name": "virtual-network",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtualNetworkTemplateUrl')]",
                    "contentVersion": "0.0.0.1"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('securityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [{
                        "name": "SSH",
                        "properties": {
                            "description": "Allows inbound SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Grafana",
                        "properties": {
                            "description": "Allows inbound grafana HTTP traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [{
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
                        },
                        "subnet": {
                            "id": "[variables('subnetRef')]"
                        }
                    }
                }]
            }
        },
        {
            "name": "[parameters('namespace')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/',variables('OSDiskName'),'.vhd')]"
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[if(equals(parameters('authenticationType'), 'password'), variables('passwordAuth'), variables('sshAuth'))]",
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                    }]
                }
            },
            "resources": [{
                "type": "extensions",
                "name": "installgrafana",
                "apiVersion": "2017-03-30",
                "location": "[resourceGroup().location]",
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'))]"
                ],
                "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "fileUris": "[variables('installScripts')]",
                        "commandToExecute": "bash install-grafana.sh"
                    }
                }
            }]
        }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName')), '2016-07-01').dnsSettings.fqdn]",
            "type": "string"
        },
        "ipaddress": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName')), '2016-07-01').ipAddress]",
            "type": "string"
        }
    }
}